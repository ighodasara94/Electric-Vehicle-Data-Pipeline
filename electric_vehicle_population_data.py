# -*- coding: utf-8 -*-
"""Electric Vehicle Population Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QFI8guKfMMsc3JMqsa6Z9TdRnU8rYcXL
"""
import time
import datetime
import requests
import pandas as pd
import numpy as np
from sqlalchemy import create_engine

print("Starting data pipeline at ", datetime.datetime.now().strftime('%Y:%m:%d %H:%M:%S'))
print("-------------------------------------------------------------------")

# OG data source - https://catalog.data.gov/dataset/electric-vehicle-population-data
def extract() -> dict:
  api_url = 'https://data.wa.gov/api/views/f6w7-q2d2/rows.json?accessType=DOWNLOAD'
  data = requests.get(api_url).json()
  return data

def transform(data:dict) -> pd.DataFrame:
  # fetch column names from the json data
  column_names = [col["name"] for col in data["meta"]["view"]["columns"]]
  data = extract()
  print(f'Total data length {len(data)}')
  df = pd.DataFrame(data["data"], columns=column_names)
  df.rename(columns={'WAOFM - GIS - Legislative District Boundary': 'GIS - Legislative District Boundary'}, inplace=True)
  df.drop(['created_meta', 'updated_meta', 'meta'], axis=1, inplace=True)
  return df

def load(df:pd.DataFrame) -> None:
  disk_engine = create_engine('sqlite:///electric_vehicle_data.db')
  df.to_sql('electric_vehicle_data', disk_engine, if_exists='replace')

data = extract()
df = transform(data)

load(df)

df.dtypes
df.head()